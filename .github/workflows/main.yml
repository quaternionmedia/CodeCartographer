name: Build and Deploy to GitHub Pages

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # Check out the repository
      - name: Checkout üõéÔ∏è
        uses: actions/checkout@v2

      # Set up Python environment
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.11' # Ensure this matches your development Python version

      # Install dependencies
      - name: Install dependencies üì¶
        run: |
          python -m pip install --upgrade pip
          pip install jinja2

      # Render the Jinja2 templates to static HTML
      - name: Render Templates üñåÔ∏è
        run: render_templates.py
        working-directory: ./src/codecarto/containers/web

      # Deploy to GitHub Pages
      - name: Deploy to GitHub Pages üöÄ
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./src/codecarto/containers/web/src/pages # The directory where your index.html now exists


    # Start the necessary Docker containers.
    # Generate the static content that needs to be hosted on GitHub Pages.
    # Deploy the static content to the gh-pages branch.

    # # Start the docker containers
    # - name: Start containers
    #   run: docker-compose -f "docker-compose.yml" up -d --build

    # # Login to Docker Hub
    # - name: Login to Docker Hub
    #   uses: docker/login-action@v3
    #   with:
    #     username: ${{ secrets.DOCKERHUB_USERNAME }}
    #     password: ${{ secrets.DOCKERHUB_TOKEN }}

    # # Setup Docker Buildx
    # - name: Set up Docker Buildx
    #   uses: docker/setup-buildx-action@v3

    # # Build static assets in Docker container
    # - name: Build static assets
    #   run: |
    #     docker-compose -f docker-compose.yml build
    #     docker-compose -p codecartographer -f docker-compose.yml up -d
    #     # wait for a short period to ensure services are up
    #     sleep 10
    #     # retrieve container ID for the 'web' service
    #     container_id=$(docker-compose -p codecartographer ps -q web)
    #     echo "Copying static assets from container $container_id"
    #     docker cp "$container_id:/app" ./statics

    # # Show web container logs for debugging
    # - name: Show web container logs
    #   run: |
    #     container_id=$(docker-compose -p codecartographer ps -q web)
    #     docker logs "$container_id"

    # # Build and push the image
    # - name: Build and push
    #   uses: docker/build-push-action@v5
    #   with:
    #     context: .
    #     file: ./src/codecarto/containers/web/Dockerfile
    #     push: true
    #     tags: ${{ secrets.DOCKERHUB_USERNAME }}/clockbox:latest

    # # Deploy to GitHub Pages
    # - name: Deploy to GitHub Pages
    #   uses: peaceiris/actions-gh-pages@v3
    #   with:
    #     github_token: ${{ secrets.GITHUB_TOKEN }}
    #     publish_dir: ./statics
    #     keep_files: true
    #     commit_message: 'Deploy to GitHub Pages'

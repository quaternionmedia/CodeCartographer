import ast


class BaseASTVisitor(ast.NodeVisitor):
    def __init__(self, *args, **kwargs):
        super().__init__(*args, **kwargs)
        """The base AST visitor."""
        # region AST objects
        self.module = None
        self.variables = []
        self.interactives = []
        self.expressions = []
        self.functiontypes = []
        self.functions = []
        self.asyncfunctions = []
        self.classes = []
        self.returns = []
        self.deletes = []
        self.assigns = []
        self.typealiases = []
        self.augassigns = []
        self.annassigns = []
        self.forloops = []
        self.asyncforloops = []
        self.whileloops = []
        self.ifs = []
        self.withs = []
        self.asyncwiths = []
        self.matches = []
        self.raises = []
        self.trys = []
        self.trystars = []
        self.asserts = []
        self.imports = []
        self.importfroms = []
        self.globals = []
        self.nonlocals = []
        self.exprs = []
        self.passes = []
        self.breaks = []
        self.continues = []
        self.boolops = []
        self.namedexprs = []
        self.binops = []
        self.uarynops = []
        self.lambdas = []
        self.ifexps = []
        self.dicts = []
        self.sets = []
        self.listcomps = []
        self.setcomps = []
        self.dictcomps = []
        self.generatorexps = []
        self.awaits = []
        self.yields = []
        self.yieldfroms = []
        self.comparisons = []
        self.calls = []
        self.formattedvalues = []
        self.joinedstrs = []
        self.constats = []
        self.attribuetes = []
        self.subscripts = []
        self.starreds = []
        self.names = []
        self.lists = []
        self.tuples = []
        self.slices = []
        self.loads = []
        self.stores = []
        self.dels = []
        self.ands = []
        self.ors = []
        self.adds = []
        self.subs = []
        self.mults = []
        self.matmults = []
        self.divs = []
        self.mods = []
        self.pows = []
        self.lshifts = []
        self.rshifts = []
        self.bitors = []
        self.bitxors = []
        self.bitands = []
        self.floordivs = []
        self.inverts = []
        self.nots = []
        self.uaddss = []
        self.usubss = []
        self.eqss = []
        self.not_eqss = []
        self.lts = []
        self.ltes = []
        self.gts = []
        self.gtes = []
        self.iss = []
        self.isnots = []
        self.ins = []
        self.notins = []
        self.excepthandlers = []
        self.matchvalues = []
        self.matchsingleton = []
        self.matchsequences = []
        self.matchmappings = []
        self.matchclasses = []
        self.matchstars = []
        self.matchases = []
        self.machors = []
        self.typeignores = []
        self.typevars = []
        self.paramspecs = []
        self.typevartuples = []
        self.relations = []
        # endregion
